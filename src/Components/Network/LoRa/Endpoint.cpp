//------------------------------------------------------------------------------------------------
// File: LoRaEndpoint.cpp
// Description:
//------------------------------------------------------------------------------------------------
#include "Endpoint.hpp"
//------------------------------------------------------------------------------------------------
#include "BryptMessage/ApplicationMessage.hpp"
#include "Components/Network/EndpointDefinitions.hpp"
//------------------------------------------------------------------------------------------------

Network::LoRa::Endpoint::Endpoint(
    std::string_view interface, Operation operation)
    : IEndpoint(interface, operation, Protocol::LoRa)
{
}

//------------------------------------------------------------------------------------------------

Network::LoRa::Endpoint::~Endpoint()
{
}

//------------------------------------------------------------------------------------------------

//------------------------------------------------------------------------------------------------
// Description:
//------------------------------------------------------------------------------------------------
Network::Protocol Network::LoRa::Endpoint::GetProtocol() const
{
    return ProtocolType;
}

//------------------------------------------------------------------------------------------------

//------------------------------------------------------------------------------------------------
// Description:
//------------------------------------------------------------------------------------------------
std::string Network::LoRa::Endpoint::GetProtocolString() const
{
    return ProtocolString.data();
}

//------------------------------------------------------------------------------------------------

//------------------------------------------------------------------------------------------------
// Description:
// Returns:
//------------------------------------------------------------------------------------------------
std::string Network::LoRa::Endpoint::GetEntry() const
{
    return "";
}

//------------------------------------------------------------------------------------------------

//------------------------------------------------------------------------------------------------
// Description:
// Returns:
//------------------------------------------------------------------------------------------------
std::string Network::LoRa::Endpoint::GetURI() const
{
    return Scheme.data() + GetEntry();
}

//------------------------------------------------------------------------------------------------

//------------------------------------------------------------------------------------------------
// Description:
//------------------------------------------------------------------------------------------------
void Network::LoRa::Endpoint::Startup()
{
}

//------------------------------------------------------------------------------------------------

//------------------------------------------------------------------------------------------------
// Description:
//------------------------------------------------------------------------------------------------
bool Network::LoRa::Endpoint::Shutdown()
{
    return true;
}

//------------------------------------------------------------------------------------------------

//------------------------------------------------------------------------------------------------
// Description:
//------------------------------------------------------------------------------------------------

bool Network::LoRa::Endpoint::IsActive() const
{
    return false;
}

//------------------------------------------------------------------------------------------------

//------------------------------------------------------------------------------------------------
// Description:
//------------------------------------------------------------------------------------------------
void Network::LoRa::Endpoint::ScheduleBind([[maybe_unused]] std::string_view binding)
{
}

//------------------------------------------------------------------------------------------------

//------------------------------------------------------------------------------------------------
// Description:
//------------------------------------------------------------------------------------------------
void Network::LoRa::Endpoint::ScheduleConnect([[maybe_unused]] std::string_view entry)
{
}

//------------------------------------------------------------------------------------------------

//------------------------------------------------------------------------------------------------
// Description:
//------------------------------------------------------------------------------------------------
void Network::LoRa::Endpoint::ScheduleConnect(
    [[maybe_unused]] BryptIdentifier::SharedContainer const& spIdentifier,
    [[maybe_unused]] std::string_view entry)
{
}

//------------------------------------------------------------------------------------------------

//------------------------------------------------------------------------------------------------
// Description:
//------------------------------------------------------------------------------------------------
bool Network::LoRa::Endpoint::ScheduleSend(
    [[maybe_unused]] BryptIdentifier::Container const& identifier,
    [[maybe_unused]] std::string_view message)
{
    return false;
}

//------------------------------------------------------------------------------------------------
